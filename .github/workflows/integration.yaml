name: pnpm build
on:
  push:
jobs:
  prettier:
    runs-on: ubuntu-22.04
    permissions:
      # Required to checkout the code
      contents: read
      # Required to put a comment into the pull-request
      pull-requests: write
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      # Cache .pnpm-store
      - name: Cache .pnpm-store
        uses: actions/cache@v3
        with:
          path: /home/runner/setup-pnpm/node_modules/.bin/store/v3
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile  --prefer-offline
      - name: 'Prettier'
        run: pnpm format:check

  test:
    runs-on: ubuntu-22.04
    permissions:
      # Required to checkout the code
      contents: read
      # Required to put a comment into the pull-request
      pull-requests: write
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      # Cache .pnpm-store
      - name: Cache .pnpm-store
        uses: actions/cache@v3
        with:
          path: /home/runner/setup-pnpm/node_modules/.bin/store/v3
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile  --prefer-offline
      - name: 'Test'
        run: npx vitest --coverage.enabled --coverage.provider=v8 --coverage.reporter=json-summary --coverage.reporter=json
      - name: 'Report Coverage'
        if: always() # Also gepnpnerate the report if tests are failing
        uses: davelosert/vitest-coverage-report-action@v2

  build:
    runs-on: ubuntu-22.04
    permissions:
      # Required to checkout the code
      contents: read
      # Required to put a comment into the pull-request
      pull-requests: write
    strategy:
      matrix:
        node-version: [18]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      # Cache .pnpm-store
      - name: Cache .pnpm-store
        uses: actions/cache@v3
        with:
          path: /home/runner/setup-pnpm/node_modules/.bin/store/v3
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile  --prefer-offline
      - name: 'Build'
        run: pnpm build

  playwright:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      # Cache .pnpm-store
      - name: Cache .pnpm-store
        uses: actions/cache@v3
        with:
          path: /home/runner/setup-pnpm/node_modules/.bin/store/v3
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      # Cache Playwright binaries
      - name: Cache Playwright binaries
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm i --frozen-lockfile  --prefer-offline

      - name: Install playwright deps
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: pnpm run test:playwright

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: test-results/
          retention-days: 30
